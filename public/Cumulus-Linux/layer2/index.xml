<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cumulus Networks Documentation</title>
    <link>http://example.org/Cumulus-Linux/layer2/</link>
    <description>Recent content on Cumulus Networks Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="http://example.org/Cumulus-Linux/layer2/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title></title>
      <link>http://example.org/Cumulus-Linux/layer2/Copy_of_Prescriptive_Topology_Manager_-_PTM/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/Cumulus-Linux/layer2/Copy_of_Prescriptive_Topology_Manager_-_PTM/</guid>
      <description>Copy of Prescriptive Topology Manager - PTM In data center topologies, right cabling is a time-consuming endeavor and is error prone. Prescriptive Topology Manager (PTM) is a dynamic cabling verification tool to help detect and eliminate such errors. It takes a graphviz-DOT specified network cabling plan (something many operators already generate), stored in a topology.dot file, and couples it with runtime information derived from LLDP to verify that the cabling matches the specification.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://example.org/Cumulus-Linux/layer2/Copy_of_Spanning_Tree_and_Rapid_Spanning_Tree/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/Cumulus-Linux/layer2/Copy_of_Spanning_Tree_and_Rapid_Spanning_Tree/</guid>
      <description>Copy of Spanning Tree and Rapid Spanning Tree Spanning tree protocol (STP) is always recommended in layer 2 topologies, as it prevents bridge loops and broadcast radiation on a bridged network. mstpd is a daemon that implements IEEE802.1D 2004 and IEEE802.1Q 2011. STP is enabled by default in Cumulus Linux.
The STP modes Cumulus Linux supports vary depending upon which bridge driver mode is in use. For a bridge configured in traditional mode, STP, RSTP, PVST and PVRST are supported; with the default set to PVRST.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://example.org/Cumulus-Linux/layer2/Ethernet_Bridging_-_VLANs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/Cumulus-Linux/layer2/Ethernet_Bridging_-_VLANs/</guid>
      <description>Ethernet Bridging - VLANs Ethernet bridges provide a means for hosts to communicate through layer 2, by connecting all of the physical and logical interfaces in the system into a single layer 2 domain. The bridge is a logical interface with a MAC address and an MTU (maximum transmission unit). The bridge MTU is the minimum MTU among all its members. By default, the bridge&amp;rsquo;s MAC address is copied from eth0.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://example.org/Cumulus-Linux/layer2/IGMP_and_MLD_Snooping/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/Cumulus-Linux/layer2/IGMP_and_MLD_Snooping/</guid>
      <description>IGMP and MLD Snooping IGMP (Internet Group Management Protocol) and MLD (Multicast Listener Discovery) snooping are implemented in the bridge driver in the Cumulus Linux kernel and are enabled by default. IGMP snooping processes IGMP v1/v2/v3 reports received on a bridge port in a bridge to identify the hosts which would like to receive multicast traffic destined to that group.
When an IGMPv2 leave message is received, a group specific query is sent to identify if there are any other hosts interested in that group, before the group is deleted.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://example.org/Cumulus-Linux/layer2/LACP_Bypass/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/Cumulus-Linux/layer2/LACP_Bypass/</guid>
      <description>LACP Bypass On Cumulus Linux, *LACP Bypass* is a feature that allows a bond configured in 802.3ad mode to become active and forward traffic even when there is no LACP partner. A typical use case for this feature is to enable a host, without the capability to run LACP, to PXE boot while connected to a switch on a bond configured in 802.3ad mode. Once the pre-boot process finishes and the host is capable of running LACP, the normal 802.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://example.org/Cumulus-Linux/layer2/Link_Layer_Discovery_Protocol/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/Cumulus-Linux/layer2/Link_Layer_Discovery_Protocol/</guid>
      <description>Link Layer Discovery Protocol The lldpd daemon implements the IEEE802.1AB (Link Layer Discovery Protocol, or LLDP) standard. LLDP enables you to know which ports are neighbors of a given port. By default, lldpd runs as a daemon and is started at system boot. lldpd command line arguments are placed in /etc/default/lldpd. lldpd configuration options are placed in /etc/lldpd.conf or under /etc/lldpd.d/.
For more details on the command line arguments and config options, see man lldpd(8).</description>
    </item>
    
    <item>
      <title></title>
      <link>http://example.org/Cumulus-Linux/layer2/Multi-Chassis_Link_Aggregation_-_MLAG/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/Cumulus-Linux/layer2/Multi-Chassis_Link_Aggregation_-_MLAG/</guid>
      <description>Multi-Chassis Link Aggregation - MLAG Multi-Chassis Link Aggregation (MLAG), enables a server or switch with a two-port bond, such as a link aggregation group/LAG, EtherChannel, port group or trunk, to connect those ports to different switches and operate as if they are connected to a single, logical switch. This provides greater redundancy and greater system throughput.
MLAG or CLAG?
The Cumulus Linux implementation of MLAG is referred to by other vendors as CLAG, MC-LAG or VPC.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://example.org/Cumulus-Linux/layer2/Spanning_Tree_and_Rapid_Spanning_Tree/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/Cumulus-Linux/layer2/Spanning_Tree_and_Rapid_Spanning_Tree/</guid>
      <description>Spanning Tree and Rapid Spanning Tree Spanning tree protocol (STP) is always recommended in layer 2 topologies as it prevents bridge loops and broadcast radiation on a bridged network. STP also provides redundant links for automatic failover when an active link fails. STP is enabled by default in Cumulus Linux.
Contents {.expand-control-image}This topic describes &amp;hellip;
 Supported Modes  STP for a VLAN-aware Bridge STP within a Traditional Mode Bridge  View Bridge and STP Status and Logs Customize Spanning Tree Protocol  Spanning Tree Priority PortAdminEdge (PortFast Mode) PortAutoEdge BPDU Guard Bridge Assurance BPDU Filter Storm Control Spanning Tree Parameter List Caveats and Errata  Related Information  Supported Modes The STP modes Cumulus Linux supports vary depending upon whether the traditional or VLAN-aware bridge driver mode is in use.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://example.org/Cumulus-Linux/layer2/Virtual_Router_Redundancy_-_VRR/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/Cumulus-Linux/layer2/Virtual_Router_Redundancy_-_VRR/</guid>
      <description>Virtual Router Redundancy - VRR Virtual Router Redundancy (VRR) enables hosts to communicate with any redundant router without reconfiguration, running dynamic router protocols, or running router redundancy protocols. This means that redundant routers will respond to Address Resolution Protocol (ARP) requests from hosts. Routers are configured to respond in an identical manner, but if one fails, the other redundant routers will continue to respond, leaving the hosts with the impression that nothing has changed.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://example.org/Cumulus-Linux/layer2/bonding_link_aggregation/Bonding_-_Link_Aggregation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/Cumulus-Linux/layer2/bonding_link_aggregation/Bonding_-_Link_Aggregation/</guid>
      <description>Bonding - Link Aggregation Linux bonding provides a method for aggregating multiple network interfaces (slaves) into a single logical bonded interface (bond). Cumulus Linux supports two bonding modes:
 IEEE 802.3ad link aggregation mode, which allows one or more links to be aggregated together to form a link aggregation group (LAG), so that a media access control (MAC) client can treat the link aggregation group as if it were a single link.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://example.org/Cumulus-Linux/layer2/ethernet_bridging_vlans/Traditional_Bridge_Mode/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/Cumulus-Linux/layer2/ethernet_bridging_vlans/Traditional_Bridge_Mode/</guid>
      <description>Traditional Bridge Mode Cumulus Networks recommends you use a VLAN-aware bridge on your switch. You use traditional mode bridges only if you need to run more than one bridge on the switch or if you need to use PVSTP+.
Contents {.expand-control-image}This topic describes &amp;hellip;
 Create a Traditional Mode Bridge  Configure a Traditional Bridge with NCLU Manually Configure a Traditional Mode Bridge  Trunks in Traditional Bridge Mode  Trunk Example VLAN Tagging Examples Configure ARP Timers  Caveats  Create a Traditional Mode Bridge You can configure a traditional mode bridge either using NCLU or manually editing the /etc/network/interfaces file.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://example.org/Cumulus-Linux/layer2/ethernet_bridging_vlans/VLAN-aware_Bridge_Mode/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/Cumulus-Linux/layer2/ethernet_bridging_vlans/VLAN-aware_Bridge_Mode/</guid>
      <description>VLAN-aware Bridge Mode The Cumulus Linux bridge driver supports two configuration modes, one that is VLAN-aware, and one that follows a more traditional Linux bridge model.
For traditional Linux bridges, the kernel supports VLANs in the form of VLAN subinterfaces. Enabling bridging on multiple VLANs means configuring a bridge for each VLAN and, for each member port on a bridge, creating one or more VLAN subinterfaces out of that port.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://example.org/Cumulus-Linux/layer2/ethernet_bridging_vlans/VLAN_Tagging/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/Cumulus-Linux/layer2/ethernet_bridging_vlans/VLAN_Tagging/</guid>
      <description>VLAN Tagging This topic shows two examples of VLAN tagging, one basic and one more advanced. They both demonstrate the streamlined interface configuration from ifupdown2.
Contents {.expand-control-image}This topic describes &amp;hellip;
 VLAN Tagging, a Basic Example VLAN Tagging, an Advanced Example VLAN Translation  VLAN Tagging, a Basic Example A simple configuration demonstrating VLAN tagging involves two hosts connected to a switch.
{width=&amp;ldquo;300&amp;rdquo;}  *host1* connects to swp1 with both untagged frames and with 802.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://example.org/Cumulus-Linux/layer2/link_layer_discovery_protocol/voice_vlan/Voice_VLAN/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/Cumulus-Linux/layer2/link_layer_discovery_protocol/voice_vlan/Voice_VLAN/</guid>
      <description>Voice VLAN In Cumulus Linux, a voice VLAN is a VLAN dedicated to voice traffic on a switch port. However, the term can mean different things to different vendors. Voice VLAN is part of a trunk port with 2 VLANs that comprises either:
 Native VLAN, which carries both data and voice traffic, or Voice VLAN, which carries the voice traffic, and a data or native VLAN, which carries the data traffic in a trunk port.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://example.org/Cumulus-Linux/layer2/virtual_router_redundancy/ifplugd/ifplugd/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/Cumulus-Linux/layer2/virtual_router_redundancy/ifplugd/ifplugd/</guid>
      <description>ifplugd ifplugd is an Ethernet link-state monitoring daemon, that can execute user-specified scripts to configure an Ethernet device when a cable is plugged in, or automatically unconfigure it when a cable is removed.
Follow the steps below to install and configure the ifplugd daemon.
Contents {.expand-control-image}This topic describes &amp;hellip;
 Install ifplugd Configure ifplugd Caveats and Errata  Install ifplugd  Update the switch before installing the daemon:
cumulus@switch:~$ sudo -E apt-get update Install the ifplugd package:</description>
    </item>
    
  </channel>
</rss>