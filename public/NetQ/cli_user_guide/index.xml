<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cumulus Networks Documentation</title>
    <link>http://example.org/NetQ/cli_user_guide/</link>
    <description>Recent content on Cumulus Networks Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="http://example.org/NetQ/cli_user_guide/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title></title>
      <link>http://example.org/NetQ/cli_user_guide/CLI_Preface/CLI_Preface/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/NetQ/cli_user_guide/CLI_Preface/CLI_Preface/</guid>
      <description>CLI Preface A variety of resources are available for you to become familiar with Cumulus NetQ and to take advantage of its monitoring and analytic capabilities. These resources are identified here along with information about how the content is presented.
Contents {.expand-control-image}This topic describes&amp;hellip;
 What&amp;rsquo;s New in Cumulus NetQ 2.0.0 Available Documentation Document Formatting  Typographical Conventions Note Conventions    What&amp;rsquo;s New in Cumulus NetQ 2.0.0 Cumulus NetQ 2.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://example.org/NetQ/cli_user_guide/automate_common_tasks/Automate_Common_and_Repetitive_Tasks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/NetQ/cli_user_guide/automate_common_tasks/Automate_Common_and_Repetitive_Tasks/</guid>
      <description>Automate Common and Repetitive Tasks NetQ commands can also be run in an automation tool, such as Ansible, Chef, or Puppet; depending on the outcome of the automation tests, the script can either continue the deployment, or roll back the changes until the issues are addressed.
Contents {.expand-control-image}This topic describes how to&amp;hellip;
 Run NetQ Commands in Automation Scripts  Run NetQ Commands in Automation Scripts Using NetQ for preventative care of your network pairs well with automation scripts and playbooks to prevent errors on your network before deploying the configuration to your production network.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://example.org/NetQ/cli_user_guide/command_line_overview/NetQ_Command_Line_Overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/NetQ/cli_user_guide/command_line_overview/NetQ_Command_Line_Overview/</guid>
      <description>NetQ Command Line Overview The NetQ CLI provides access to all of the network state and event information collected by the NetQ Agents. It behaves the same way most CLIs behave, with groups of commands used to display related information, the ability to use TAB completion when entering commands, and to get help for given commands and options. The commands are grouped into four categories: check and show, agent and notifier, trace, and resolve.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://example.org/NetQ/cli_user_guide/monitor_containter_environments/Monitor_Container_Environments/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/NetQ/cli_user_guide/monitor_containter_environments/Monitor_Container_Environments/</guid>
      <description>Monitor Container Environments The NetQ Agent monitors container environments the same way it monitors physical servers. There is no special implementation. The NetQ Agent pulls data from the container as it would pull data from a Cumulus Linux switch or Linux host. It can be installed on a Linux server or in a Linux VM. NetQ Agent integrates with container orchestrators including Kubernetes and Docker Swarm.
NetQ monitors many aspects of containers on your network, including their:</description>
    </item>
    
    <item>
      <title></title>
      <link>http://example.org/NetQ/cli_user_guide/monitor_data_link_layer/Monitor_Data_Link_Layer_Devices_and_Protocols/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/NetQ/cli_user_guide/monitor_data_link_layer/Monitor_Data_Link_Layer_Devices_and_Protocols/</guid>
      <description>Monitor Data Link Layer Devices and Protocols With NetQ, a network administrator can monitor OSI Layer 2 devices and protocols, including switches, bridges, link control, and physical media access. Keeping track of the various data link layer devices in your network ensures consistent and error-free communications between devices. NetQ provides the ability to:  Monitor and validate device and protocol configurations View available communication paths between devices  It helps answer questions such as:</description>
    </item>
    
    <item>
      <title></title>
      <link>http://example.org/NetQ/cli_user_guide/monitor_linux_hosts/Monitor_Linux_Hosts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/NetQ/cli_user_guide/monitor_linux_hosts/Monitor_Linux_Hosts/</guid>
      <description>Monitor Linux Hosts Running NetQ on Linux hosts provides unprecedented network visibility, giving the network operator a complete view of the entire infastrucutre’s network connectivity instead of just from the network devices.
The NetQ Agent is supported on the following Linux hosts:
 CentOS 7 Red Hat Enterprise Linux 7.1 Ubuntu 16.04  You need to install the OS-specific NetQ metapack on every host you want to monitor with NetQ.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://example.org/NetQ/cli_user_guide/monitor_network_health/Monitor_Overall_Network_Health/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/NetQ/cli_user_guide/monitor_network_health/Monitor_Overall_Network_Health/</guid>
      <description>Monitor Overall Network Health NetQ provides the information you need to monitor the health of your network fabric, devices, and interfaces. You are able to easily validate the operation and view the configuration across the entire network from switches to hosts to containers. For example, you can monitor the operation of routing protocols and virtual network configurations, the status of NetQ Agents and hardware components, and the operation and efficiency of interfaces.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://example.org/NetQ/cli_user_guide/monitor_network_layer/Monitor_Network_Protocols_and_Services/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/NetQ/cli_user_guide/monitor_network_layer/Monitor_Network_Protocols_and_Services/</guid>
      <description>Monitor Network Protocols and Services The Network Services card workflows provide a network-wide view into the routing, link, and virtual network protocols installed in your network. In this release, you can monitor the network-wide behavior or a single session of the BGP, EVPN, MLAG, and LLDP services. Each protocol has its own card workflow containing:
 a small card with an overall status,  a medium card displaying key attributes of the protocol,  a large card with detailed performance statistics, some with additional tabs, and  full screen cards displaying attributes of all associated switches, sessions, alarms or other relevant data.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://example.org/NetQ/cli_user_guide/monitor_physical_layer/Monitor_Physical_Layer_Components/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/NetQ/cli_user_guide/monitor_physical_layer/Monitor_Physical_Layer_Components/</guid>
      <description>Monitor Physical Layer Components With NetQ, a network administrator can monitor OSI Layer 1 physical components on network devices, including interfaces, ports, links, and peers. NetQ provides the ability to:  Manage physical inventory: view the performance and status of various components of a switch or host server Validate configurations: verify the configuration of network peers and ports  It helps answer questions such as:
 Are any individual or bonded links down?</description>
    </item>
    
    <item>
      <title></title>
      <link>http://example.org/NetQ/cli_user_guide/monitor_switch_hardware/Monitor_Switch_Hardware_and_Software/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/NetQ/cli_user_guide/monitor_switch_hardware/Monitor_Switch_Hardware_and_Software/</guid>
      <description>Monitor Switch Hardware and Software With NetQ, a network administrator can monitor both the switch hardware and software components for misconfigurations. NetQ helps answer questions such as:
 What switches do I have in the network?
 Are all switches licensed correctly?
 Do all switches have NetQ agents running?
  NetQ uses LLDP (Link Layer Discovery Protocol) to collect port information. NetQ can also identify peer ports connected to DACs (Direct Attached Cables) and AOCs (Active Optical Cables) without using LLDP, even if the link is not UP.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://example.org/NetQ/cli_user_guide/monitor_virtual_overlays/Monitor_Virtual_Network_Overlays/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/NetQ/cli_user_guide/monitor_virtual_overlays/Monitor_Virtual_Network_Overlays/</guid>
      <description>Monitor Virtual Network Overlays With NetQ, a network administrator can monitor virtual network components in the data center, including VXLAN, EVPN, and LNV software constructs. NetQ provides the ability to:  Manage virtual constructs: view the performance and status of VXLANs, EVPN, and LNV Validate overlay communication paths  It helps answer questions such as:
 Is my overlay configured and operating correctly?
 Is my control plane configured correctly?</description>
    </item>
    
    <item>
      <title></title>
      <link>http://example.org/NetQ/cli_user_guide/resolve_issues/Resolve_Issues/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/NetQ/cli_user_guide/resolve_issues/Resolve_Issues/</guid>
      <description>Resolve Issues Monitoring of systems inevitably leads to the need to troubleshoot and resolve the issues found. In fact network management follows a common pattern as shown in this diagram.
{width=&amp;ldquo;700&amp;rdquo;}
This topic describes some of the tools and commands you can use to troubleshoot issues with the network and NetQ itself.  Methods for Diagnosing Network Issues Resolve MLAG Issues Investigate NetQ Issues   Attachments: {width=&amp;ldquo;8&amp;rdquo; height=&amp;ldquo;8&amp;rdquo;} image2018-10-2 11:29:59.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://example.org/NetQ/cli_user_guide/resolve_issues/Resolve_MLAG_Issues/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/NetQ/cli_user_guide/resolve_issues/Resolve_MLAG_Issues/</guid>
      <description>Resolve MLAG Issues This topic outlines a few scenarios that illustrate how you use NetQ to troubleshoot MLAG on Cumulus Linux switches. Each starts with a log message that indicates the current MLAG state.
NetQ can monitor many aspects of an MLAG configuration, including:
 Verifying the current state of all nodes Verifying the dual connectivity state Checking that the peer link is part of the bridge Verifying whether MLAG bonds are not bridge members Verifying whether the VXLAN interface is not a bridge member Checking for remote-side service failures caused by systemctl Checking for VLAN-VNI mapping mismatches Checking for layer 3 MTU mismatches on peerlink subinterfaces Checking for VXLAN active-active address inconsistencies Verifying that STP priorities are the same across both peers  Contents {.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://example.org/NetQ/cli_user_guide/resolve_issues/investiage_netq_issues/Investigate_NetQ_Issues/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/NetQ/cli_user_guide/resolve_issues/investiage_netq_issues/Investigate_NetQ_Issues/</guid>
      <description>Investigate NetQ Issues There are several paths you can take to locate and investigate issues that occur in the NetQ software itself, including viewing configuration and log files, verifying NetQ Agent health, and verifying NetQ Platform configuration. If these do not produce a resolution, you can capture a log to use in discussion with Cumulus Networks support team.
Contents {.expand-control-image}This topic describes how to&amp;hellip;
 Browse Configuration and Log Files Check NetQ Agent Health Generate a Support File  Browse Configuration and Log Files To aid in troubleshooting issues with NetQ, there are the following configuration and log files that can provide insight into the root cause of the issue:</description>
    </item>
    
    <item>
      <title></title>
      <link>http://example.org/NetQ/cli_user_guide/resolve_issues/methods_for_diagnosing_issues/Methods_for_Diagnosing_Network_Issues/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/NetQ/cli_user_guide/resolve_issues/methods_for_diagnosing_issues/Methods_for_Diagnosing_Network_Issues/</guid>
      <description>Methods for Diagnosing Network Issues NetQ provides users with the ability to go back in time to replay the network state, see fabric-wide event change logs and root cause state deviations. The NetQ Telemetry Server maintains data collected by NetQ agents in a time-series database, making fabric-wide events available for analysis. This enables you to replay and analyze network-wide events for better visibility and to correlate patterns. This allows for root-cause analysis and optimization of network configs for the future.</description>
    </item>
    
  </channel>
</rss>